{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blogs/小程序/mini_1/","result":{"data":{"markdownRemark":{"fileAbsolutePath":"/Users/zhengjinyang/Documents/study/R-AS.github.io/src/pages/blogs/小程序/mini_1.md","html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#setdata-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\">setData 工作原理？</a></li>\n<li><a href=\"#setdata-%E8%B0%83%E7%94%A8%E9%A2%91%E7%8E%87setdata-%E6%95%B0%E6%8D%AE%E6%9C%80%E5%A4%A7%E5%A4%9A%E5%B0%91%E8%B6%85%E8%BF%87%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86\">setData 调用频率？setData 数据最大多少？超过如何处理？</a></li>\n<li><a href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E9%97%B4%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E6%B3%95\">小程序页面间有哪些传递数据的方法？</a></li>\n<li><a href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B7%AF%E7%94%B1-api-%E6%9C%89%E5%93%AA%E4%BA%9B%E9%A1%B5%E9%9D%A2%E6%A0%88%E6%9C%80%E9%AB%98%E5%A4%9A%E5%B0%91%E8%B6%85%E8%BF%87%E9%A1%B5%E9%9D%A2%E6%95%B0%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86\">小程序路由 API 有哪些？页面栈最高多少？超过页面数如何处理？</a></li>\n<li><a href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8C%85%E9%99%90%E5%88%B6%E5%A4%9A%E5%B0%91%E5%A6%82%E4%BD%95%E5%88%86%E5%8C%85%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%8C%85%E5%A4%A7%E5%B0%8F\">小程序包限制多少？如何分包？如何优化包大小？</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%80%A7%E8%83%BD%E5%B8%B8%E8%A7%81%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E5%93%AA%E4%BA%9B\">如何分析小程序的性能？常见的性能优化有哪些？</a></li>\n</ul>\n</div>\n<hr>\n<h4 id=\"setdata-工作原理\">setData 工作原理？</h4>\n<p><img src=\"/blogs/mini_program/mini_1_pic_1.png#pic_center\" alt=\"pic_1\">\n如上图所示，小程序的视图层使用 WebView 作为渲染载体，而逻辑层由独立的 JavaScriptCore 作为运行环境。在架构上 WebView 和 JavaScriptCore 都是独立的模块，并不具备数据直接共享的通道。当前，视图层和逻辑层的数据运输，实际上通过两边提供的 evaluateJavaScript 所实现。即用户传输的数据，需要将其转换为字符串形式传递，同时转换后的数据内容拼接成一份 JS 脚本，再通过执行 JS 脚本的形式传递到两边独立环境。</p>\n<p>而 evaluateJavaScript 的执行会受很多方面的影响，数据到达视图层并不是实时的。</p>\n<p>了解 setData 工作原理后，可得知频繁的使用 setData 会消耗性能。例如，用户的一次交互，如点击某个按钮，开发者的逻辑层要处理一些事情，然后再通过 setData 引起界面变化。这样一个过程需要四次通信：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"87497257271844670000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`1. 渲染层 -> Native(点击事件)\n2. Native -> 逻辑层(点击事件)\n3. 逻辑层 -> Native(setData)\n4. Native -> 渲染层(setData)`, `87497257271844670000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"text\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\">1. 渲染层 -&gt; Native(点击事件)</span>\n<span class=\"grvsc-line\">2. Native -&gt; 逻辑层(点击事件)</span>\n<span class=\"grvsc-line\">3. 逻辑层 -&gt; Native(setData)</span>\n<span class=\"grvsc-line\">4. Native -&gt; 渲染层(setData)</span></code></pre>\n<hr>\n<h4 id=\"setdata-调用频率setdata-数据最大多少超过如何处理\">setData 调用频率？setData 数据最大多少？超过如何处理？</h4>\n<ol>\n<li>setData 调用频率：setData 接口的调用涉及逻辑层与渲染层间的线程通信，通信过于频繁可能导致处理队列阻塞，界面渲染不及时而导致卡顿，应避免无用的频繁调用。\n<strong>得分条件：每秒调用 setData 的次数不超过 20 次</strong></li>\n<li>setData 数据大小：\n由于小程序运行逻辑线程与渲染线程之上，setData的调用会把数据从逻辑层传到渲染层，数据太大会增加通信时间。\n<strong>得分条件：setData的数据在JSON.stringify后不超过 256KB</strong></li>\n<li>超过如何处理：\n例如有这种小程序使用了长列表，需要分页，有以下写法：</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"18120882639920800000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`this.setData({ list: [...list1, ...list2] })`, `18120882639920800000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setData</span><span class=\"mtk1\">({ </span><span class=\"mtk12\">list:</span><span class=\"mtk1\"> [...</span><span class=\"mtk12\">list1</span><span class=\"mtk1\">, ...</span><span class=\"mtk12\">list2</span><span class=\"mtk1\">] })</span></span></code></pre>\n<p>以上写法有可能造成 list 超过 1024kb 的限制。因此可以把 list 改成二维数组，把每一页的数据变成数组的每一项，例如：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65769044764532360000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`this.setData({ [\\`list[\\${page}]\\`]: [...] })`, `65769044764532360000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setData</span><span class=\"mtk1\">({ </span><span class=\"mtk12\">[</span><span class=\"mtk8\">`list[</span><span class=\"mtk4\">${</span><span class=\"mtk12\">page</span><span class=\"mtk4\">}</span><span class=\"mtk8\">]`</span><span class=\"mtk12\">]:</span><span class=\"mtk1\"> [...] })</span></span></code></pre>\n<hr>\n<h4 id=\"小程序页面间有哪些传递数据的方法\">小程序页面间有哪些传递数据的方法？</h4>\n<ol>\n<li><strong>通过 url 方式传递数据</strong></li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"43317865247330030000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// 传递数据\nwx.navigateTo({\n  url: \\`/pages/listDetail/listDetail?id=\\${id}&title=\\${title}\\`,\n})`, `43317865247330030000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// 传递数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`/pages/listDetail/listDetail?id=</span><span class=\"mtk4\">${</span><span class=\"mtk12\">id</span><span class=\"mtk4\">}</span><span class=\"mtk8\">&title=</span><span class=\"mtk4\">${</span><span class=\"mtk12\">title</span><span class=\"mtk4\">}</span><span class=\"mtk8\">`</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"3505120345621804000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// 接收数据\nPage({\n  onLoad: function (options) {\n    const { id, title } = options\n  }\n})`, `3505120345621804000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// 接收数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">Page</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onLoad</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">options</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">title</span><span class=\"mtk1\"> } = </span><span class=\"mtk12\">options</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>注意：此方法有一定的局限性，不适宜传入复杂的数据，例如：数组、对象，适合参数比较少的情况</strong></p>\n<ol start=\"2\">\n<li><strong>使用全局 app 页面定义的变量实现数据的传递</strong></li>\n</ol>\n<p>全局页面 app.js</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"9674602693438116000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`App({\n  onLaunch: function() {\n    this.globalData = {\n      token: 'token',\n      userInfo: {},\n    }\n  }\n})`, `9674602693438116000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk11\">App</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onLaunch</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">globalData</span><span class=\"mtk1\"> = {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">token:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;token&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">userInfo:</span><span class=\"mtk1\"> {},</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p>使用页面</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"8316743628389700000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`const app = getApp()\nPage({\n  onGetGlobal() {\n    // 获取全局变量\n    const { token, userInfo } = app.globalData\n  }\n})`, `8316743628389700000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">app</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getApp</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">Page</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onGetGlobal</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 获取全局变量</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userInfo</span><span class=\"mtk1\"> } = </span><span class=\"mtk12\">app</span><span class=\"mtk1\">.</span><span class=\"mtk12\">globalData</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>注意：</strong></p>\n<ol>\n<li>App() 必须在 app.js 中注册，且不能注册多个</li>\n<li>不要在定义 App() 内的函数调用 getApp()，使用 this 就可以拿到 App 下的实例</li>\n<li>不要在 App.onLaunch 的时候调用 getCurrentPages()，此时 page 还没有生成</li>\n<li>通过 getApp() 获取到全局页面的实例后，就不要私自调用生命周期函数了的</li>\n<li><strong>使用 eventChannel 向被打开页面传送数据</strong></li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"70067867581659920000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// 父(当前)页面向子(目标)页面传递数据\nPage({\n  data: {\n    parentPageData: {\n      name: '川川',\n      url: 'http://coder.itclan.cn',\n      vx: 'itclanCoder',\n    },\n  },\n\n  onEventChannel() {\n    const parentPageData = this.data.parentPageData; // 当前页面的数据\n    wx.navigateTo({\n      url: \\`/pages/listDetail/listDetail\\`, // 打开的目标页面\n      success: (res) => {\n        // 通过eventChannel向被打开页面传送数据,目标页面是listDetail,这个data名字是你自己取的任意,在目标页面中有个参数接收就可以\n        res.eventChannel.emit('parentPageEmit', { data: parentPageData });\n      },\n    });\n  },\n});`, `70067867581659920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// 父(当前)页面向子(目标)页面传递数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">Page</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">data:</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">parentPageData:</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">name:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;川川&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;http://coder.itclan.cn&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">vx:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;itclanCoder&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  },</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onEventChannel</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">parentPageData</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">parentPageData</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 当前页面的数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">`/pages/listDetail/listDetail`</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// 打开的目标页面</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk11\">success</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">res</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// 通过eventChannel向被打开页面传送数据,目标页面是listDetail,这个data名字是你自己取的任意,在目标页面中有个参数接收就可以</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">res</span><span class=\"mtk1\">.</span><span class=\"mtk12\">eventChannel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;parentPageEmit&#39;</span><span class=\"mtk1\">, { </span><span class=\"mtk12\">data:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">parentPageData</span><span class=\"mtk1\"> });</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"43478152591046460000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`<!--被打开(上/父级)页面的wxml,绑定事件-->\n<view bindtap=&quot;onEventChannel&quot;>打开跳转到目标页面</view>`, `43478152591046460000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"html\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">&lt;!--被打开(上/父级)页面的wxml,绑定事件--&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">view</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bindtap</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;onEventChannel&quot;</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">打开跳转到目标页面</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">view</span><span class=\"mtk17\">&gt;</span></span></code></pre>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15284418836176196000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// 打开(目标)页面\nPage({\n  data: {\n    acceptParentData: {},\n  },\n\n  onLoad: function(options) {\n    // 通过getOpenerEventChannel对象,对\\`parentPageEmit\\`进行监听\n    const eventChannel = this.getOpenerEventChannel();\n    eventChannel.on('parentPageEmit', (data) => {\n      console.log(data);\n      this.setData({\n        acceptParentData: data,\n      });\n    });\n  },\n});`, `15284418836176196000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// 打开(目标)页面</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">Page</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">data:</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">acceptParentData:</span><span class=\"mtk1\"> {},</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  },</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onLoad</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">options</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 通过getOpenerEventChannel对象,对`parentPageEmit`进行监听</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">eventChannel</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getOpenerEventChannel</span><span class=\"mtk1\">();</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">eventChannel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">on</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;parentPageEmit&#39;</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setData</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">acceptParentData:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      });</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<hr>\n<h4 id=\"小程序路由-api-有哪些页面栈最高多少超过页面数如何处理\">小程序路由 API 有哪些？页面栈最高多少？超过页面数如何处理？</h4>\n<p><strong>1. wx.switchTab</strong>\n跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"80775016855761320000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// app.json\n{\n  &quot;tabBar&quot;: {\n    &quot;list&quot;: [{\n      &quot;pagePath&quot;: &quot;index&quot;,\n      &quot;text&quot;: &quot;首页&quot;\n    },{\n      &quot;pagePath&quot;: &quot;other&quot;,\n      &quot;text&quot;: &quot;其他&quot;\n    }]\n  }\n}`, `80775016855761320000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"json\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// app.json</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">&quot;tabBar&quot;</span><span class=\"mtk1\">: {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">&quot;list&quot;</span><span class=\"mtk1\">: [{</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;pagePath&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;index&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;text&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;首页&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    },{</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;pagePath&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;other&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;text&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;其他&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"22973642648146320000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`wx.switchTab({\n  url: '/index'\n})`, `22973642648146320000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">switchTab</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;/index&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>2. wx.reLaunch</strong></p>\n<p>关闭所有页面，打开到应用内的某个页面</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"88160897310067200000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`wx.reLaunch({\n  url: 'test?id=1',\n})`, `88160897310067200000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">reLaunch</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;test?id=1&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"91494061860567200000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// test\nPage({\n  onLoad (option) {\n    console.log(option.query)\n  }\n})`, `91494061860567200000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// test</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">Page</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">onLoad</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">option</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">option</span><span class=\"mtk1\">.</span><span class=\"mtk12\">query</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>4. wx.redirectTo</strong></p>\n<p>关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"51493221910312050000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`wx.redirectTo({\n  url: 'test?id=1'\n})`, `51493221910312050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">redirectTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;test?id=1&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>5. wx.navigateTo</strong></p>\n<p>保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 wx.navigateBack 可以返回到原页面。<strong>小程序中页面栈最多十层。</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65247223474450930000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`wx.navigateTo({\n  url: 'test?id=1',\n  events: {\n    // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据\n    acceptDataFromOpenedPage: function(data) {\n      console.log(data)\n    },\n    someEvent: function(data) {\n      console.log(data)\n    }\n    ...\n  },\n  success: function(res) {\n    // 通过eventChannel向被打开页面传送数据\n    res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })\n  }\n})`, `65247223474450930000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;test?id=1&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">events:</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">acceptDataFromOpenedPage</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">someEvent</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  },</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">success</span><span class=\"mtk12\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">res</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 通过eventChannel向被打开页面传送数据</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">res</span><span class=\"mtk1\">.</span><span class=\"mtk12\">eventChannel</span><span class=\"mtk1\">.</span><span class=\"mtk11\">emit</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;acceptDataFromOpenerPage&#39;</span><span class=\"mtk1\">, { </span><span class=\"mtk12\">data:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;test&#39;</span><span class=\"mtk1\"> })</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>6. wx.navigateBack</strong></p>\n<p>关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"56009515175632590000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，而 redirectTo 方法则不会。见下方示例代码\n\n// 此处是A页面\nwx.navigateTo({\n  url: 'B?id=1'\n})\n\n// 此处是B页面\nwx.navigateTo({\n  url: 'C?id=1'\n})\n\n// 在C页面内 navigateBack，将返回A页面\nwx.navigateBack({\n  delta: 2\n})`, `56009515175632590000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，而 redirectTo 方法则不会。见下方示例代码</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">// 此处是A页面</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;B?id=1&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">// 此处是B页面</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateTo</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">url:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;C?id=1&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">// 在C页面内 navigateBack，将返回A页面</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">wx</span><span class=\"mtk1\">.</span><span class=\"mtk11\">navigateBack</span><span class=\"mtk1\">({</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">delta:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">2</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p><strong>超过页面数如何处理?</strong></p>\n<p><strong>微信小程序页面栈不能超过10层，所以使用wx.navigateTo()的时候需要注意是否会超过10个页面栈，给出对应的处理方法:</strong></p>\n<ol>\n<li>使用 wx.reLaunch() 代替 wx.navigateTo() 关闭所有页面跳转，一般用于自己做的 tabbar 组件跳转直接把用到 wx.navigateTo 替换为 wx.reLaunch </li>\n<li>可以在页面加载的时候就调用getCurrentPages() 监听当前页面栈的个数内容，判断当前页面栈中是否存在即将要跳转的页面路径，如果有，直接用 wx.navigateBack() 返回到该页面</li>\n<li>这个方法类似于方法一，可以在页面加载的时候就调用getCurrentPages() 监听当前页面栈的个数内容，在页面要跳转的时候，判断当前页面栈的个数是否超过10，如果超过10个，就给wx.reLaunch（） 关闭所有页面，重新进行页面栈个数统计</li>\n</ol>\n<hr>\n<h4 id=\"小程序包限制多少如何分包如何优化包大小\">小程序包限制多少？如何分包？如何优化包大小？</h4>\n<p><strong>1. 小程序包限制？</strong></p>\n<p>目前小程序分包大小有以下限制：</p>\n<ul>\n<li>整个小程序所有分包大小不超过 20M</li>\n<li>单个分包/主包大小不能超过 2M</li>\n</ul>\n<p>某些情况下，开发者需要将小程序划分成不同的子包，在构建时打包成不同的分包，用户在使用时按需进行加载。</p>\n<p>在构建小程序分包项目时，构建会输出一个或多个分包。每个使用分包小程序必定含有一个主包。所谓的主包，即放置默认启动页面/TabBar 页面，以及一些所有分包都需用到公共资源/JS 脚本；而分包则是根据开发者的配置进行划分。</p>\n<p>在小程序启动时，默认会下载主包并启动主包内页面，当用户进入分包内某个页面时，客户端会把对应分包下载下来，下载完成后再进行展示。</p>\n<p><strong>2. 如何分包？</strong></p>\n<ul>\n<li>配置方法：</li>\n</ul>\n<p>假设支持分包的小程序目录结构如下：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"30240528518416500000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`├── app.js\n├── app.json\n├── app.wxss\n├── packageA\n│   └── pages\n│       ├── cat\n│       └── dog\n├── packageB\n│   └── pages\n│       ├── apple\n│       └── banana\n├── pages\n│   ├── index\n│   └── logs\n└── utils`, `30240528518416500000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"json\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">├── app.js</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">├── app.json</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">├── app.wxss</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">├── packageA</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│   └── pages</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│       ├── cat</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│       └── dog</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">├── packageB</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│   └── pages</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│       ├── apple</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│       └── banana</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">├── pages</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│   ├── index</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">│   └── logs</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">└── utils</span></span></code></pre>\n<p>开发者通过在 app.json subpackages 字段声明项目分包结构：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"92201926466281360000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`{\n  &quot;pages&quot;:[\n    &quot;pages/index&quot;,\n    &quot;pages/logs&quot;\n  ],\n  &quot;subpackages&quot;: [\n    {\n      &quot;root&quot;: &quot;packageA&quot;,\n      &quot;pages&quot;: [\n        &quot;pages/cat&quot;,\n        &quot;pages/dog&quot;\n      ]\n    }, {\n      &quot;root&quot;: &quot;packageB&quot;,\n      &quot;name&quot;: &quot;pack2&quot;,\n      &quot;pages&quot;: [\n        &quot;pages/apple&quot;,\n        &quot;pages/banana&quot;\n      ]\n    }\n  ]\n}`, `92201926466281360000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"json\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">&quot;pages&quot;</span><span class=\"mtk1\">:[</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;pages/index&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;pages/logs&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  ],</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">&quot;subpackages&quot;</span><span class=\"mtk1\">: [</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;root&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;packageA&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;pages&quot;</span><span class=\"mtk1\">: [</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;pages/cat&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;pages/dog&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      ]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }, {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;root&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;packageB&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;name&quot;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">&quot;pack2&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">&quot;pages&quot;</span><span class=\"mtk1\">: [</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;pages/apple&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;pages/banana&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      ]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  ]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>subpackages 中，每个分包的配置有以下几项：</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>root</td>\n<td>String</td>\n<td>分包根目录</td>\n</tr>\n<tr>\n<td>name</td>\n<td>String</td>\n<td>分包别名，分包预下载时可以使用</td>\n</tr>\n<tr>\n<td>pages</td>\n<td>StringArray</td>\n<td>分包页面路径，相对与分包根目录</td>\n</tr>\n<tr>\n<td>independent</td>\n<td>Boolean</td>\n<td>分包是否是独立分包</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>打包原则</p>\n<ul>\n<li>声明 subpackages 后，将按 subpackages 配置路径进行打包，subpackages 配置路径外的目录将被打包到 app（主包） 中</li>\n<li>app（主包）也可以有自己的 pages（即最外层的 pages 字段）</li>\n<li>subpackage 的根目录不能是另外一个 subpackage 内的子目录</li>\n<li>tabBar 页面必须在 app（主包）内</li>\n</ul>\n</li>\n<li>\n<p>引用原则</p>\n<ul>\n<li>packageA 无法 require packageB JS 文件，但可以 require app、自己 package 内的 JS 文件；使用 分包异步化 时不受此条限制</li>\n<li>packageA 无法 import packageB 的 template，但可以 require app、自己 package 内的 template</li>\n<li>packageA 无法使用 packageB 的资源，但可以使用 app、自己 package 内的资源</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"如何分析小程序的性能常见的性能优化有哪些\">如何分析小程序的性能？常见的性能优化有哪些？</h4>\n<p><strong>1. 首屏时间</strong></p>\n<p>首屏时间是指用户从打开小程序看到第一屏主要内容的时间，首屏时间太长会导致用户长时间看到的都是白屏，影响使用体验。</p>\n<p>优化首屏时间，可以分为以下几种情况：</p>\n<ul>\n<li>首屏渲染的内容较多，需要集合多份数据进行渲染。这种情况需要开发者把内容分优先级，把优先级高的内容做优先展示，缩短白屏时间；</li>\n<li>首屏内容依赖的数据从服务端请求的时间太长。开发者需要从服务端侧具体分析服务端数据返回的时间长的原因；</li>\n<li>一次性渲染数据太大或依赖的计算过于复杂。减少渲染的数据量、优化渲染相关数据的算法可以解决这类问题。</li>\n</ul>\n<p><strong>得分条件：首屏时间不超过 5 秒</strong></p>\n<p><strong>2. 渲染时间</strong></p>\n<p>渲染时间指的是首次渲染或因数据变化带来的页面结构变化的渲染花费的时间。</p>\n<p>渲染界面的耗时过长会让用户觉得卡顿，体验较差，出现这一情况时，需要校验下是否同时渲染的区域太大（例如列表过长），或渲染依赖的计算是否过于复杂。</p>\n<p><strong>得分条件：渲染时间不超过 500ms</strong></p>\n<p><strong>3. 脚本执行时间</strong></p>\n<p>脚本执行时间是指JS脚本在一次同步执行中消耗的时间，比如生命周期回调、事件处理函数的同步执行时间。</p>\n<p>执行脚本的耗时过长会让用户觉得卡顿，体验较差，出现这一情况时，需要确认并优化脚本的逻辑</p>\n<p><strong>得分条件：一个执行周期内脚本运行时间不超过 1 秒</strong></p>\n<p><strong>4. setData调用频率</strong></p>\n<p>setData接口的调用涉及逻辑层与渲染层间的线程通信，通信过于频繁可能导致处理队列阻塞，界面渲染不及时而导致卡顿，应避免无用的频繁调用。</p>\n<p><strong>得分条件：每秒调用setData的次数不超过 20 次</strong></p>\n<p><strong>5. setData数据大小</strong></p>\n<p>由于小程序运行逻辑线程与渲染线程之上，setData的调用会把数据从逻辑层传到渲染层，数据太大会增加通信时间。</p>\n<p><strong>得分条件：setData的数据在JSON.stringify后不超过 256KB</strong></p>\n<p><strong>6. WXML节点数</strong></p>\n<p>建议一个页面使用少于 1000 个 WXML 节点，节点树深度少于 30 层，子节点数不大于 60 个。一个太大的 WXML 节点树会增加内存的使用，样式重排时间也会更长，影响体验。</p>\n<p><strong>得分条件：页面WXML节点少于 1000 个，节点树深度少于 30 层，子节点数不大于 60 个</strong></p>\n<p><strong>7. 图片缓存</strong></p>\n<p>开启 HTTP 缓存控制后，下一次加载同样的图片，会直接从缓存读取，大大提升加载速度。</p>\n<p><strong>得分条件：所有图片均开启 HTTP 缓存</strong></p>\n<p><strong>8. 图片大小</strong></p>\n<p>图片太大会增加下载时间和内存的消耗，应根据显示区域大小合理控制图片大小。</p>\n<p><strong>得分条件：图片宽高乘积 &#x3C;= 实际显示宽高乘积 * (设备像素比 ^ 2)</strong></p>\n<p><strong>9. 请求耗时</strong></p>\n<p>请求的耗时太长会让用户一直等待甚至离开，应当优化好服务器处理时间、减小回包大小，让请求快速响应。</p>\n<p><strong>得分条件：所有网络请求都在 1 秒内返回结果</strong></p>\n<p><strong>10. 网络请求数</strong></p>\n<p>短时间内发起太多请求会触发小程序并行请求数量的限制，同时太多请求也可能导致加载慢等问题，应合理控制请求数量，甚至做请求的合并等。</p>\n<p><strong>得分条件：通过wx.request发起的耗时超过 300ms 的请求并发数不超过 10 个</strong></p>\n<p><strong>11. 图片请求数</strong></p>\n<p>短时间内发起太多图片请求会触发浏览器并行加载的限制，可能导致图片加载慢，用户一直处理等待。应该合理控制数量，可考虑使用雪碧图技术或在屏幕外的图片使用懒加载。</p>\n<p><strong>得分条件：同域名耗时超过 100ms 的图片请求并发数不超过 6 个</strong></p>\n<p><strong>12. 网络请求缓存</strong></p>\n<p>发起网络请求总会让用户等待，可能造成不好的体验，应尽量避免多余的请求，比如对同样的请求进行缓存</p>\n<p><strong>得分条件：3 分钟以内同一个url请求不出现两次回包大于 128KB 且一模一样的内容</strong></p>\n<hr>\n<p><strong>转载自：</strong></p>\n<ul>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/audits/performance.html\">https://developers.weixin.qq.com/miniprogram/dev/framework/audits/performance.html</a></li>\n<li><a href=\"https://godbasin.github.io/2018/10/05/wxapp-set-data\">https://godbasin.github.io/2018/10/05/wxapp-set-data</a></li>\n<li><a href=\"https://juejin.cn/post/6870004953478496264\">https://juejin.cn/post/6870004953478496264</a></li>\n<li><a href=\"https://juejin.cn/post/6893650440228241416\">https://juejin.cn/post/6893650440228241416</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk17 { color: #808080; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n</style>","frontmatter":{"title":"小程序基础知识记录","date":"2021-07-18","type":"小程序"},"excerpt":"setData 工作原理？ setData 调用频率？setData 数据最大多少？超过如何处理？ 小程序页面间有哪些传递数据的方法？ 小程序路由 API…","fields":{"readingTime":{"text":"18 min read"}}},"allDirectory":{"totalCount":14,"edges":[{"node":{"base":"css"}},{"node":{"base":"frontend"}},{"node":{"base":"interview-css"}},{"node":{"base":"interview-javascript"}},{"node":{"base":"interview-浏览器"}},{"node":{"base":"interview-计算机基础"}},{"node":{"base":"javascript"}},{"node":{"base":"nodejs"}},{"node":{"base":"react"}},{"node":{"base":"redux-tool-kit"}},{"node":{"base":"typescript"}},{"node":{"base":"vue"}},{"node":{"base":"小程序"}},{"node":{"base":"科普"}}]}},"pageContext":{"slug":"/小程序/mini_1/"}},"staticQueryHashes":["1487620982","3141419394","3649515864"]}