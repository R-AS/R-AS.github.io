{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blogs/interview-算法/algorithm_2/","result":{"data":{"markdownRemark":{"fileAbsolutePath":"/Users/zhengjinyang/Documents/study/R-AS.github.io/src/pages/blogs/interview-算法/algorithm_2.md","html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"#%E5%AE%9E%E7%8E%B0\">实现</a></li>\n</ul>\n</div>\n<hr>\n<p>在有序的数组中，寻找目标值的位置，可以用到二分查找。</p>\n<h4 id=\"思路\">思路</h4>\n<ul>\n<li>以数组的中间元素于目标值对比</li>\n<li>如果目标值等于中间元素，则返回索引</li>\n<li>如果目标值小于中间元素，则将区间缩小到上半部分</li>\n<li>否则将区间缩小到下半部分</li>\n<li>从第二个步骤开始反复检查，直到找到值或者区间为空</li>\n</ul>\n<p><img src=\"/blogs/interview-%E7%AE%97%E6%B3%95/algorithm_2_pic_1.png#pic_center\" alt=\"pic_1\"></p>\n<hr>\n<h4 id=\"实现\">实现</h4>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"53080535344037446000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function binarySearch(arr, target) {\n  // 左指针\n  let l = 0\n  // 右指针\n  let r = arr.length - 1\n  // 中间指针\n  let mid\n\n  // r 永远都大于等于 l\n  while (r >= l) {\n    mid = l + Math.floor((r - l) / 2)\n\n    // 如果目标值等于中间值，则返回\n    if (arr[mid] === target) {\n      return mid\n    }\n\n    // 如果目标值小于中间值，则将范围缩小到上半部分\n    if (target < arr[mid]) {\n      r = mid - 1\n    }\n\n    // 如果目标值大于中间值，则将范围缩小到下半部分\n    if (target > arr[mid]) {\n      l = mid + 1\n    }\n  }\n\n  // 没找到则返回 -1\n  return -1\n}`, `53080535344037446000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">binarySearch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">arr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">target</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 左指针</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">l</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 右指针</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">arr</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 中间指针</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mid</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// r 永远都大于等于 l</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">r</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">l</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mid</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">l</span><span class=\"mtk1\"> + </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">floor</span><span class=\"mtk1\">((</span><span class=\"mtk12\">r</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">l</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 如果目标值等于中间值，则返回</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk12\">mid</span><span class=\"mtk1\">] === </span><span class=\"mtk12\">target</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mid</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 如果目标值小于中间值，则将范围缩小到上半部分</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk12\">mid</span><span class=\"mtk1\">]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">r</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">mid</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 如果目标值大于中间值，则将范围缩小到下半部分</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">arr</span><span class=\"mtk1\">[</span><span class=\"mtk12\">mid</span><span class=\"mtk1\">]) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">l</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">mid</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// 没找到则返回 -1</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> -</span><span class=\"mtk7\">1</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n</style>","frontmatter":{"title":"二分查找","date":"2022-12-12 17:10","type":"interview-算法"},"excerpt":"思路 实现 在有序的数组中，寻找目标值的位置，可以用到二分查找。思路 以数组的中间元素于目标值对比 如果目标值等于中间元素，则返回索引 如果目标值小于中间元素，则将区间缩小到上半部分 否则将区间缩小到下半部分 从第二个步骤开始反复检查，直到找到值或者区间为空 pic_1实现","fields":{"readingTime":{"text":"2 min read"}}},"allDirectory":{"totalCount":15,"edges":[{"node":{"base":"css"}},{"node":{"base":"frontend"}},{"node":{"base":"interview-css"}},{"node":{"base":"interview-javascript"}},{"node":{"base":"interview-浏览器"}},{"node":{"base":"interview-计算机基础"}},{"node":{"base":"javascript"}},{"node":{"base":"nodejs"}},{"node":{"base":"react"}},{"node":{"base":"redux-tool-kit"}},{"node":{"base":"typescript"}},{"node":{"base":"vue"}},{"node":{"base":"小程序"}},{"node":{"base":"科普"}},{"node":{"base":"interview-算法"}}]}},"pageContext":{"slug":"/interview-算法/algorithm_2/"}},"staticQueryHashes":["1487620982","3141419394","3649515864"]}