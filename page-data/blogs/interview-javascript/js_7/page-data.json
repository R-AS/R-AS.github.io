{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blogs/interview-javascript/js_7/","result":{"data":{"markdownRemark":{"fileAbsolutePath":"/Users/zhengjinyang/Documents/study/R-AS.github.io/src/pages/blogs/interview-javascript/js_7.md","html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF\">原型链继承</a></li>\n<li><a href=\"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF\">构造函数继承</a></li>\n<li><a href=\"#%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF--%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF\">组合继承（原型链继承 + 构造函数继承）</a></li>\n<li><a href=\"#%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF\">原型式继承</a></li>\n<li><a href=\"#%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF\">寄生式继承</a></li>\n<li><a href=\"#%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E5%BC%8F%E7%BB%A7%E6%89%BF\">寄生组合式继承</a></li>\n</ul>\n</div>\n<hr>\n<h4 id=\"原型链继承\">原型链继承</h4>\n<ol>\n<li>示例：</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15151190088624333000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`// child1.__prototype -> Child.prototype -> parent -> parent.__proto__ -> Parent.prototype\nfunction Parent() {\n  this.name = 'kevin'\n}\n\nParent.prototype.getName = function() {\n  console.log(this.name)\n}\n\nfunction Child() {}\n\nChild.prototype = new Parent()\n\nconst child1 = new Child()\n\nconsole.log(child1.getName()) // kevin`, `15151190088624333000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk3\">// child1.__prototype -&gt; Child.prototype -&gt; parent -&gt; parent.__proto__ -&gt; Parent.prototype</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;kevin&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">Parent</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getName</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">function</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\">() {}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">Child</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Parent</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getName</span><span class=\"mtk1\">()) </span><span class=\"mtk3\">// kevin</span></span></code></pre>\n<ol start=\"2\">\n<li>\n<p>缺点：</p>\n<ul>\n<li>引用类型的属性被所有实例共享：</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"26356339415121590000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`  function Parent () {\n    this.names = ['kevin', 'daisy']\n  }\n\n  function Child () {}\n\n  Child.prototype = new Parent()\n\n  var child1 = new Child()\n\n  child1.names.push('yayu')\n\n  console.log(child1.names) // [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]\n\n  var child2 = new Child()\n\n  console.log(child2.names) // [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]`, `26356339415121590000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\"> () {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;kevin&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;daisy&#39;</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\"> () {}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Parent</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;yayu&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]</span></span></code></pre>\n<ul>\n<li>在创建 Child 实例时，不能向 Parent 传参</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h4 id=\"构造函数继承\">构造函数继承</h4>\n<ol>\n<li>示例：</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"53405403207290920000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function Parent() {\n  this.names = ['kevin', 'daisy']\n}\n\nfunction Child() {\n  Parent.call(this)\n}\n\nconst child1 = new Child()\nchild1.names.push('yayu')\nconsole.log(child1.names) // [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]\n\nconst child2 = new Child()\nconsole.log(child2.names) // [&quot;kevin&quot;, &quot;daisy&quot;]`, `53405403207290920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;kevin&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;daisy&#39;</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Parent</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;yayu&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;kevin&quot;, &quot;daisy&quot;, &quot;yayu&quot;]</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">names</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;kevin&quot;, &quot;daisy&quot;]</span></span></code></pre>\n<ol start=\"2\">\n<li>\n<p>优点：</p>\n<ul>\n<li>避免了引用类型的属性被所有实例共享</li>\n<li>可以在 Child 中向 Parent 传参：</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2502462903662539000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`  function Parent (name) {\n    this.name = name\n  }\n\n  function Child (name) {\n      Parent.call(this, name)\n  }\n\n  var child1 = new Child('kevin')\n\n  console.log(child1.name) // kevin\n\n  var child2 = new Child('daisy')\n\n  console.log(child2.name) // daisy`, `2502462903662539000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">name</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk12\">Parent</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, </span><span class=\"mtk12\">name</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;kevin&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// kevin</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;daisy&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// daisy</span></span></code></pre>\n</li>\n<li>缺点：方法都在构造函数中定义，每次创建实例都会创建一遍方法</li>\n</ol>\n<hr>\n<h4 id=\"组合继承原型链继承--构造函数继承\">组合继承（原型链继承 + 构造函数继承）</h4>\n<ol>\n<li>示例：</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"47405457101584680000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function Parent(name) {\n  this.name = name\n  this.colors = ['red', 'blue', 'green']\n}\n\nParent.prototype.getName = function() {\n  console.log(this.name)\n}\n\nfunction Child(name, age) {\n  Parent.call(this, name)\n  this.age = age\n}\n\nChild.prototype = new Parent()\nChild.prototype.constructor = Child\n\nconst child1 = new Child('kevin', '18')\nchild1.colors.push('black')\n\nconsole.log(child1.name) // kevin\nconsole.log(child1.age) // 18\nconsole.log(child1.colors) // [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;, &quot;black&quot;]\n\nconst child2 = new Child('daisy', '20')\n\nconsole.log(child2.name) // daisy\nconsole.log(child2.age) // 20\nconsole.log(child2.colors) // [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;]`, `47405457101584680000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Parent</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">name</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">colors</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&#39;red&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;blue&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;green&#39;</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">Parent</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getName</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">function</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Child</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">age</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">Parent</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, </span><span class=\"mtk12\">name</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk12\">age</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">age</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">Child</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Parent</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">Child</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constructor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Child</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;kevin&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;18&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">colors</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;black&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// kevin</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">age</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// 18</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">colors</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;, &quot;black&quot;]</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">child2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Child</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;daisy&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;20&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// daisy</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">age</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// 20</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">colors</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;]</span></span></code></pre>\n<ol start=\"2\">\n<li>优点：融合原型链继承和构造函数的优点，是 JavaScript 中最常用的继承模式。</li>\n</ol>\n<hr>\n<h4 id=\"原型式继承\">原型式继承</h4>\n<ol>\n<li>示例</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"61962448138395260000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function createObj(o) {\n  function F(){}\n  F.prototype = o\n  return new F()\n}\n\nconst person = {\n  name: 'kevin',\n  friends: ['daisy', 'kelly'],\n}\nconst person1 = createObj(person)\nconst person2 = createObj(person)\n\nperson1.name = 'person1'\nconsole.log(person2.name) // kevin\n\nperson1.friends.push('taylor')\nconsole.log(person2.friends) // ['daisy', 'kelly', 'taylor']`, `61962448138395260000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createObj</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">F</span><span class=\"mtk1\">(){}</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">F</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">o</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">F</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">person</span><span class=\"mtk1\"> = {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">name:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;kevin&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">friends:</span><span class=\"mtk1\"> [</span><span class=\"mtk8\">&#39;daisy&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;kelly&#39;</span><span class=\"mtk1\">],</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">person1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">createObj</span><span class=\"mtk1\">(</span><span class=\"mtk12\">person</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">person2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">createObj</span><span class=\"mtk1\">(</span><span class=\"mtk12\">person</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">person1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;person1&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">person2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">name</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// kevin</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">person1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">friends</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;taylor&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">person2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">friends</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// [&#39;daisy&#39;, &#39;kelly&#39;, &#39;taylor&#39;]</span></span></code></pre>\n<ol start=\"2\">\n<li>缺点：包含引用类型的属性值始终都会共享相应的值，这点跟原型链继承一样。</li>\n<li>\n<p>tips: </p>\n<blockquote>\n<p>修改 person1.name 的值，person2.name 的值并未发生改变。是因为 person1.name = 'person1' 给 person1 添加了 name 值，并非修改了原型上的 name 值。person2.name 实际上访问的是原型上的 name。</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<h4 id=\"寄生式继承\">寄生式继承</h4>\n<p>创建一个仅用于封装继承过程的函数，该函数在内部以某种形式来做增强对象，最后返回对象。</p>\n<ol>\n<li>示例：</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"6240700569016311000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function createObj(o) {\n  const clone = Object.create(o)\n  clone.sayName = function() {\n    console.log('hi')\n  }\n  return clone\n}`, `6240700569016311000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createObj</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">clone</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">.</span><span class=\"mtk11\">create</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">clone</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sayName</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">function</span><span class=\"mtk1\">() {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;hi&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">clone</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<ol start=\"2\">\n<li>缺点：跟借用构造函数模式一样，每次创建对象都会创建一遍方法。</li>\n</ol>\n<h4 id=\"寄生组合式继承\">寄生组合式继承</h4>\n<ol>\n<li>示例</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"76212159660005340000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`function object(o) {\n  function F() {}\n  F.prototype = o\n  return new F()\n}\n\nfunction prototype(child, parent) {\n  const prototype = object(parent.prototype)\n  prototype.constructor = child\n  child.prototype = prototype\n}\n\nprototype(Child, Parent)`, `76212159660005340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">object</span><span class=\"mtk1\">(</span><span class=\"mtk12\">o</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">F</span><span class=\"mtk1\">() {}</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">F</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">o</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">F</span><span class=\"mtk1\">()</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">prototype</span><span class=\"mtk1\">(</span><span class=\"mtk12\">child</span><span class=\"mtk1\">, </span><span class=\"mtk12\">parent</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">object</span><span class=\"mtk1\">(</span><span class=\"mtk10\">parent</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">.</span><span class=\"mtk12\">constructor</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">child</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">child</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">prototype</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk11\">prototype</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Child</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Parent</span><span class=\"mtk1\">)</span></span></code></pre>\n<ol start=\"2\">\n<li>\n<p>优点：</p>\n<ul>\n<li>只调用一次 Parent 构造函数，避免在 Parent.prototype 上面创建不必要的、多余的属性</li>\n<li>原型链保持不变</li>\n<li>能够正常使用 instanceof 和 isPrototypeof</li>\n</ul>\n</li>\n</ol>\n<hr>\n<p><strong>摘抄自</strong></p>\n<ul>\n<li><a href=\"https://github.com/mqyqingfeng/Blog/issues/16\">JavaScript深入之继承的多种方式和优缺点</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n</style>","frontmatter":{"title":"JS 继承方式","date":"2022-11-17","type":"interview-javascript"},"excerpt":"原型链继承 构造函数继承 组合继承（原型链继承 + 构造函数继承） 原型式继承 寄生式继承 寄生组合式继承原型链继承 示例： 缺点： 引用类型的属性被所有实例共享： 在创建 Child 实例时，不能向 Parent…","fields":{"readingTime":{"text":"4 min read"}}},"allDirectory":{"totalCount":14,"edges":[{"node":{"base":"css"}},{"node":{"base":"frontend"}},{"node":{"base":"interview-css"}},{"node":{"base":"interview-javascript"}},{"node":{"base":"interview-浏览器"}},{"node":{"base":"interview-计算机基础"}},{"node":{"base":"javascript"}},{"node":{"base":"nodejs"}},{"node":{"base":"react"}},{"node":{"base":"redux-tool-kit"}},{"node":{"base":"typescript"}},{"node":{"base":"vue"}},{"node":{"base":"小程序"}},{"node":{"base":"科普"}}]}},"pageContext":{"slug":"/interview-javascript/js_7/"}},"staticQueryHashes":["1487620982","3141419394","3649515864"]}