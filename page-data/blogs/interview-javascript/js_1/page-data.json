{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blogs/interview-javascript/js_1/","result":{"data":{"markdownRemark":{"fileAbsolutePath":"/Users/zhengjinyang/Documents/study/R-AS.github.io/src/pages/blogs/interview-javascript/js_1.md","html":"<p>JS 数据类型分为 基本类型（值类型）和 引用类型（复杂数据类型）</p>\n<hr>\n<h4 id=\"基本类型值类型\">基本类型（值类型）</h4>\n<p>基本类型在内存中占据固定大小，保存在栈内存中</p>\n<ul>\n<li>Number</li>\n<li>String</li>\n<li>Boolean</li>\n<li>Symbol</li>\n<li>null</li>\n<li>undefined</li>\n</ul>\n<hr>\n<h4 id=\"引用类型复杂数据类型\">引用类型（复杂数据类型）</h4>\n<p>引用类型指的是 Object 类型，所有其他的如 Array、Date 等数据类型都可以理解为 Object 类型的子类型。</p>\n<p>引用类型的值保存在堆内存中。</p>\n<ul>\n<li>Object</li>\n<li>Function</li>\n<li>Array</li>\n<li>Date</li>\n<li>RegExp</li>\n<li>...</li>\n</ul>\n<hr>\n<h4 id=\"二者的区别\">二者的区别</h4>\n<ul>\n<li>基本数据类型的值直接保存在栈中</li>\n<li>复杂数据类型的值保存在堆中，通过使用在栈中保存对应的指针来获取堆中的值</li>\n</ul>\n<hr>\n<h4 id=\"如何获取数据类型\">如何获取数据类型</h4>\n<ol>\n<li><strong>typeof</strong></li>\n</ol>\n<p>优点：能够快速区分基本数据类型</p>\n<p>缺点：不能将 Object、Array 和 Null 区分，都返回 object</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"63050604659920340000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`console.log(typeof 1);               // number\nconsole.log(typeof true);            // boolean\nconsole.log(typeof 'mc');            // string\nconsole.log(typeof Symbol)           // function\nconsole.log(typeof function(){});    // function\nconsole.log(typeof console.log());   // undefined\nconsole.log(typeof []);              // object \nconsole.log(typeof {});              // object\nconsole.log(typeof null);            // object\nconsole.log(typeof undefined);       // undefined`, `63050604659920340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);               </span><span class=\"mtk3\">// number</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);            </span><span class=\"mtk3\">// boolean</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;mc&#39;</span><span class=\"mtk1\">);            </span><span class=\"mtk3\">// string</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Symbol</span><span class=\"mtk1\">)           </span><span class=\"mtk3\">// function</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(){});    </span><span class=\"mtk3\">// function</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">());   </span><span class=\"mtk3\">// undefined</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> []);              </span><span class=\"mtk3\">// object </span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> {});              </span><span class=\"mtk3\">// object</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">null</span><span class=\"mtk1\">);            </span><span class=\"mtk3\">// object</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">);       </span><span class=\"mtk3\">// undefined</span></span></code></pre>\n<ol start=\"2\">\n<li><strong>instanceof</strong></li>\n</ol>\n<p>优点：能够区分 Array、Object 和 Function，适合用于判断自定义的类实例对象</p>\n<p>缺点：Number、Boolean、String 基本数据类型不能判断</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"87456449130516580000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`console.log(1 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false \nconsole.log('str' instanceof String);                // false  \nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true`, `87456449130516580000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Number</span><span class=\"mtk1\">);                    </span><span class=\"mtk3\">// false</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\"> </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Boolean</span><span class=\"mtk1\">);                </span><span class=\"mtk3\">// false </span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;str&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">String</span><span class=\"mtk1\">);                </span><span class=\"mtk3\">// false  </span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">([] </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Array</span><span class=\"mtk1\">);                    </span><span class=\"mtk3\">// true</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">function</span><span class=\"mtk1\">(){} </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Function</span><span class=\"mtk1\">);       </span><span class=\"mtk3\">// true</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">({} </span><span class=\"mtk4\">instanceof</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">);                   </span><span class=\"mtk3\">// true</span></span></code></pre>\n<ol start=\"3\">\n<li><strong>Object.prototype.toString.call()</strong></li>\n</ol>\n<p>优点：精准判断数据类型</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"55068635309423410000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`var toString = Object.prototype.toString;\nconsole.log(toString.call(1));                      //[object Number]\nconsole.log(toString.call(true));                   //[object Boolean]\nconsole.log(toString.call('mc'));                   //[object String]\nconsole.log(toString.call([]));                     //[object Array]\nconsole.log(toString.call({}));                     //[object Object]\nconsole.log(toString.call(function(){}));           //[object Function]\nconsole.log(toString.call(undefined));              //[object Undefined]\nconsole.log(toString.call(null));                   //[object Null]`, `55068635309423410000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toString</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Object</span><span class=\"mtk1\">.</span><span class=\"mtk12\">prototype</span><span class=\"mtk1\">.</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));                      </span><span class=\"mtk3\">//[object Number]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">));                   </span><span class=\"mtk3\">//[object Boolean]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;mc&#39;</span><span class=\"mtk1\">));                   </span><span class=\"mtk3\">//[object String]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">([]));                     </span><span class=\"mtk3\">//[object Array]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">({}));                     </span><span class=\"mtk3\">//[object Object]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">function</span><span class=\"mtk1\">(){}));           </span><span class=\"mtk3\">//[object Function]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">));              </span><span class=\"mtk3\">//[object Undefined]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">toString</span><span class=\"mtk1\">.</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk4\">null</span><span class=\"mtk1\">));                   </span><span class=\"mtk3\">//[object Null]</span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n</style>","frontmatter":{"title":"JS 数据类型","date":"2022-11-02","type":"interview-javascript"},"excerpt":"JS 数据类型分为 基本类型（值类型）和 引用类型（复杂数据类型）基本类型（值类型） 基本类型在内存中占据固定大小，保存在栈内存中 Number String Boolean Symbol null undefined引用类型（复杂数据类型） 引用类型指的是 Object…","fields":{"readingTime":{"text":"2 min read"}}},"allDirectory":{"totalCount":14,"edges":[{"node":{"base":"css"}},{"node":{"base":"frontend"}},{"node":{"base":"interview-css"}},{"node":{"base":"interview-javascript"}},{"node":{"base":"interview-浏览器"}},{"node":{"base":"interview-计算机基础"}},{"node":{"base":"javascript"}},{"node":{"base":"nodejs"}},{"node":{"base":"react"}},{"node":{"base":"redux-tool-kit"}},{"node":{"base":"typescript"}},{"node":{"base":"vue"}},{"node":{"base":"小程序"}},{"node":{"base":"科普"}}]}},"pageContext":{"slug":"/interview-javascript/js_1/"}},"staticQueryHashes":["1487620982","3141419394","3649515864"]}