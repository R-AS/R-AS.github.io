{"componentChunkName":"component---src-templates-preview-jsx","path":"/blogs/javascript","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3 id=\"table-of-contents\">Table of Contents</h3>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#1-windowopenstrurl-strwindowname-strwindowfeatures\">1. window.open(strUrl, strWindowName, strWindowFeatures)</a></li>\n<li><a href=\"#2-%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8\">2. 单页应用</a></li>\n<li><a href=\"#3-%E7%9B%91%E5%90%AC-url-%E4%B8%AD%E7%9A%84-hash-%E5%8F%98%E5%8C%96\">3. 监听 url 中的 hash 变化</a></li>\n</ul>\n</div>\n<hr>\n<p><strong>本文记录一些页面跳转以及监听 URL 的知识</strong></p>\n<h3 id=\"1-windowopenstrurl-strwindowname-strwindowfeatures\">1. window.open(strUrl, strWindowName, strWindowFeatures)</h3>\n<p>window.open() 可以用来新开窗口加载指定资源，它有三个参数:</p>\n<ul>\n<li>strUrl: 要在新打开的窗口中加载的 URL</li>\n<li>strWindowName: 新开窗口的名称</li>\n<li>strWindowFeatres: 一个可选参数, 列出新窗口的特征(大小、位置、滚动条等)作为一个 DOMString</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">let windowObjectReference = window.open(strUrl, strWindowName, [strWindowFeatrues])</span><span class=\"token punctuation\">**</span></span>\n<span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">返回的是新窗口对象的引用，若调用失败，返回值会是 null</span><span class=\"token punctuation\">**</span></span>\n如下:</code></pre></div>\n<p><img src=\"/blogs/javascript/js_1_pic_1.png#pic_center\" alt=\"pic_1\"></p>\n<p><strong>注意这三个参数：</strong></p>\n<ol>\n<li><strong>strUrl</strong>: 新窗口需要载入的 url 地址. strUrl 可以是 web 上的 html 页面也可以是图片文件或其他任何浏览器支持的文件格式</li>\n<li>\n<p><strong>strWindowName</strong>: 新窗口的名称.该字符串可以用来作为超链接 <code class=\"language-text\">&lt;a&gt;</code> 或表单 <code class=\"language-text\">&lt;form&gt;</code> 元素的目标属性值. 字符串中不能含有空白字符. </p>\n<ul>\n<li><strong>strWindowName 并不是新窗口的标题, 可以理解成每个窗口的 id, 假如跳转窗口的名称一样， 则是覆盖同名称的窗口, 反之亦然</strong>， 如下图:</li>\n</ul>\n<p><img src=\"/blogs/javascript/js_1_pic_2.png#pic_center\" alt=\"pic_2\"></p>\n<ul>\n<li>\n<p>strWindowName 与 <code class=\"language-text\">&lt;a&gt;</code> 标签的应用：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--点击 window_1 后会新开页面到 www.baidu.com--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://www.baidu.com<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>window_1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>window_1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">let</span> windowObjectReference <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'window_1'</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n</li>\n<li><strong>strWindowFeatures</strong>: 可选参数. 是一个字符串值, 这个值列出了将要打开的窗口的一些特性(窗口功能和工具栏). 字符串中不能包含任何空白字符, 特性之间用逗号分隔开. 参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open#Position%20and%20size%20features\">位置和尺寸特征</a></li>\n</ol>\n<hr>\n<h3 id=\"2-单页应用\">2. 单页应用</h3>\n<p>单页应用是的页面可以在无刷新的条件下重新渲染, 可通过 hash 或者 history 使 url 改变但不刷新页面</p>\n<p><strong>1. hash</strong></p>\n<p>window.location 是一个只读属性, 返回一个 Location 对象, 其中包含有关文档当前位置的信息.hash 是他的一个属性\n可通过以下操作来实现单页跳转:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">=</span> <span class=\"token string\">'edit'</span> <span class=\"token comment\">// 不会刷新页面</span></code></pre></div>\n<p>或者</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">'#edit'</span><span class=\"token operator\">></span>edit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></code></pre></div>\n<p><strong>2.history</strong></p>\n<p>Window.history 是一个只读属性, 用来获取 History 对象的引用, History 对象提供了操作浏览器会话历史（浏览器地址栏中访问的页面, 以及当前页面中通过框架加载的页面）的接口</p>\n<p><strong>History 的属性:</strong></p>\n<ul>\n<li>length: 返回在会话历史中有多少条记录, 包含了当前会话页面</li>\n<li>state: 保存了会触发 popState 事件的方法, 所传递过来的属性对象(<strong>如果不进行 pushState() or replaceState() 两种类型的调用，state 的值将会是 null</strong>)</li>\n</ul>\n<p><strong>History 的方法:</strong></p>\n<ul>\n<li>back(): 在 history 中向后跳转</li>\n<li>forward(): 在 history 中向前跳转</li>\n<li>\n<p>go(): 跳转到 history 中指定的一个点</p>\n<ul>\n<li>window.history.go(-1) // 相当于 back()</li>\n<li>window.history.go(1)  // forward()</li>\n</ul>\n</li>\n<li>\n<p>pushState(): pushState 可以将给定的数据压入到浏览器会话历史栈中, pushState 后会改变当前页面 url, 但不会伴随着刷新</p>\n<p>例如: url 产生了变化(<a href=\"https://www.xxx.com/bar.html\">https://www.xxx.com/bar.html</a>)，history 的 state 被推入了 { foo: 'bar' }, 但页面不会刷新</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> stateObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\nfoo<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>stateObj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"page 2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>replaceState(): replaceState将当前的会话页面的url替换成指定的数据, replaceState后也会改变当前页面的url, 但是也不会刷新页面</li>\n</ul>\n<p><strong>pushState 和 replaceState 的异同:</strong></p>\n<ul>\n<li>同: 都会改变当前页面显示的 url, 但不会刷新页面</li>\n<li>异: pushState是压入浏览器的会话历史栈中, 会使得History.length加1, 而replaceState是替换当前的这条会话历史, 因此不会增加History.length</li>\n</ul>\n<hr>\n<h3 id=\"3-监听-url-中的-hash-变化\">3. 监听 url 中的 hash 变化</h3>\n<p>通过 hash 改变了 url, 会触发 hashchange 事件, 可通过监听 hashchange 事件来捕获到通过 hash 改变 url 的行为</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onhashchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 或者</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hashchange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>当 hash 值改变时, 输出一个 HashChangeEvent</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>isTrusted<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> oldURL<span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:3000/\"</span><span class=\"token punctuation\">,</span> newURL<span class=\"token operator\">:</span>   <span class=\"token string\">\"http://localhost:3000/#teg\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"hashchange\"</span><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>可通过监听事件, 加入回调展示或隐藏不同 UI 显示的功能等</p>\n<hr>\n<p><strong>本文参考自</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/location\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/location</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/History_API\">https://developer.mozilla.org/zh-CN/docs/Web/API/History_API</a></li>\n<li><a href=\"https://juejin.im/post/5c2708cd6fb9a049f06a5744\">https://juejin.im/post/5c2708cd6fb9a049f06a5744</a></li>\n</ul>","fields":{"slug":"/javascript/js_1/"},"frontmatter":{"title":"页面跳转相关","date":"2020-01-13","thumbnail":"javascript/index.png"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"base":"/javascript/"}}}