{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blogs/javascript/js_1/","result":{"data":{"markdownRemark":{"fileAbsolutePath":"/Users/zhengjinyang/Documents/study/R-AS.github.io/src/pages/blogs/javascript/js_1.md","html":"<!---->\n<div class=\"toc\">\n<ul>\n<li><a href=\"#1-windowopenstrurl-strwindowname-strwindowfeatures\">1. window.open(strUrl, strWindowName, strWindowFeatures)</a></li>\n<li><a href=\"#2-%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8\">2. 单页应用</a></li>\n<li><a href=\"#3-%E7%9B%91%E5%90%AC-url-%E4%B8%AD%E7%9A%84-hash-%E5%8F%98%E5%8C%96\">3. 监听 url 中的 hash 变化</a></li>\n</ul>\n</div>\n<hr>\n<p><strong>本文记录一些页面跳转以及监听 URL 的知识</strong></p>\n<h3 id=\"1-windowopenstrurl-strwindowname-strwindowfeatures\">1. window.open(strUrl, strWindowName, strWindowFeatures)</h3>\n<p>window.open() 可以用来新开窗口加载指定资源，它有三个参数:</p>\n<ul>\n<li>strUrl: 要在新打开的窗口中加载的 URL</li>\n<li>strWindowName: 新开窗口的名称</li>\n<li>strWindowFeatres: 一个可选参数, 列出新窗口的特征(大小、位置、滚动条等)作为一个 DOMString</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"73039594621968320000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`**let windowObjectReference = window.open(strUrl, strWindowName, [strWindowFeatrues])**\n**返回的是新窗口对象的引用，若调用失败，返回值会是 null**\n如下:`, `73039594621968320000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"md\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4 mtkb\">**let windowObjectReference = window.open(strUrl, strWindowName, [</span><span class=\"mtk8 mtkb\">strWindowFeatrues</span><span class=\"mtk4 mtkb\">])**</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4 mtkb\">**返回的是新窗口对象的引用，若调用失败，返回值会是 null**</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">如下:</span></span></code></pre>\n<p><img src=\"/blogs/javascript/js_1_pic_1.png#pic_center\" alt=\"pic_1\"></p>\n<p><strong>注意这三个参数：</strong></p>\n<ol>\n<li><strong>strUrl</strong>: 新窗口需要载入的 url 地址. strUrl 可以是 web 上的 html 页面也可以是图片文件或其他任何浏览器支持的文件格式</li>\n<li>\n<p><strong>strWindowName</strong>: 新窗口的名称.该字符串可以用来作为超链接 <code>&#x3C;a></code> 或表单 <code>&#x3C;form></code> 元素的目标属性值. 字符串中不能含有空白字符. </p>\n<ul>\n<li><strong>strWindowName 并不是新窗口的标题, 可以理解成每个窗口的 id, 假如跳转窗口的名称一样， 则是覆盖同名称的窗口, 反之亦然</strong>， 如下图:</li>\n</ul>\n<p><img src=\"/blogs/javascript/js_1_pic_2.png#pic_center\" alt=\"pic_2\"></p>\n<ul>\n<li>\n<p>strWindowName 与 <code>&#x3C;a></code> 标签的应用：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65233377540686275000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`<body>\n<!--点击 window_1 后会新开页面到 www.baidu.com-->\n<a href=&quot;https://www.baidu.com&quot; target=&quot;window_1&quot;>window_1</a>\n</body>\n<script>\nlet windowObjectReference = window.open('', 'window_1')\n</script>`, `65233377540686275000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"html\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">body</span><span class=\"mtk17\">&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">&lt;!--点击 window_1 后会新开页面到 www.baidu.com--&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">href</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;https://www.baidu.com&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&quot;window_1&quot;</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">window_1</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">a</span><span class=\"mtk17\">&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">body</span><span class=\"mtk17\">&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">script</span><span class=\"mtk17\">&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">windowObjectReference</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">open</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&#39;window_1&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">script</span><span class=\"mtk17\">&gt;</span></span></code></pre>\n</li>\n</ul>\n</li>\n<li><strong>strWindowFeatures</strong>: 可选参数. 是一个字符串值, 这个值列出了将要打开的窗口的一些特性(窗口功能和工具栏). 字符串中不能包含任何空白字符, 特性之间用逗号分隔开. 参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open#Position%20and%20size%20features\">位置和尺寸特征</a></li>\n</ol>\n<hr>\n<h3 id=\"2-单页应用\">2. 单页应用</h3>\n<p>单页应用是的页面可以在无刷新的条件下重新渲染, 可通过 hash 或者 history 使 url 改变但不刷新页面</p>\n<p><strong>1. hash</strong></p>\n<p>window.location 是一个只读属性, 返回一个 Location 对象, 其中包含有关文档当前位置的信息.hash 是他的一个属性\n可通过以下操作来实现单页跳转:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"20728053575335760000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`window.location.hash = 'edit' // 不会刷新页面`, `20728053575335760000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk12\">location</span><span class=\"mtk1\">.</span><span class=\"mtk12\">hash</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&#39;edit&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// 不会刷新页面</span></span></code></pre>\n<p>或者</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"93380898091957880000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`<a href='#edit'>edit</a>`, `93380898091957880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk17\">&lt;</span><span class=\"mtk4\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">href</span><span class=\"mtk1\">=</span><span class=\"mtk8\">&#39;#edit&#39;</span><span class=\"mtk17\">&gt;</span><span class=\"mtk1\">edit</span><span class=\"mtk17\">&lt;/</span><span class=\"mtk4\">a</span><span class=\"mtk17\">&gt;</span></span></code></pre>\n<p><strong>2.history</strong></p>\n<p>Window.history 是一个只读属性, 用来获取 History 对象的引用, History 对象提供了操作浏览器会话历史（浏览器地址栏中访问的页面, 以及当前页面中通过框架加载的页面）的接口</p>\n<p><strong>History 的属性:</strong></p>\n<ul>\n<li>length: 返回在会话历史中有多少条记录, 包含了当前会话页面</li>\n<li>state: 保存了会触发 popState 事件的方法, 所传递过来的属性对象(<strong>如果不进行 pushState() or replaceState() 两种类型的调用，state 的值将会是 null</strong>)</li>\n</ul>\n<p><strong>History 的方法:</strong></p>\n<ul>\n<li>back(): 在 history 中向后跳转</li>\n<li>forward(): 在 history 中向前跳转</li>\n<li>\n<p>go(): 跳转到 history 中指定的一个点</p>\n<ul>\n<li>window.history.go(-1) // 相当于 back()</li>\n<li>window.history.go(1)  // forward()</li>\n</ul>\n</li>\n<li>\n<p>pushState(): pushState 可以将给定的数据压入到浏览器会话历史栈中, pushState 后会改变当前页面 url, 但不会伴随着刷新</p>\n<p>例如: url 产生了变化(<a href=\"https://www.xxx.com/bar.html\">https://www.xxx.com/bar.html</a>)，history 的 state 被推入了 { foo: 'bar' }, 但页面不会刷新</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"55630699752512094000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`let stateObj = {\nfoo: &quot;bar&quot;,\n};\nhistory.pushState(stateObj, &quot;page 2&quot;, &quot;bar.html&quot;);`, `55630699752512094000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stateObj</span><span class=\"mtk1\"> = {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">foo:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;bar&quot;</span><span class=\"mtk1\">,</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">};</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">history</span><span class=\"mtk1\">.</span><span class=\"mtk11\">pushState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stateObj</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;page 2&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;bar.html&quot;</span><span class=\"mtk1\">);</span></span></code></pre>\n</li>\n<li>replaceState(): replaceState将当前的会话页面的url替换成指定的数据, replaceState后也会改变当前页面的url, 但是也不会刷新页面</li>\n</ul>\n<p><strong>pushState 和 replaceState 的异同:</strong></p>\n<ul>\n<li>同: 都会改变当前页面显示的 url, 但不会刷新页面</li>\n<li>异: pushState是压入浏览器的会话历史栈中, 会使得History.length加1, 而replaceState是替换当前的这条会话历史, 因此不会增加History.length</li>\n</ul>\n<hr>\n<h3 id=\"3-监听-url-中的-hash-变化\">3. 监听 url 中的 hash 变化</h3>\n<p>通过 hash 改变了 url, 会触发 hashchange 事件, 可通过监听 hashchange 事件来捕获到通过 hash 改变 url 的行为</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"36689963775491720000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`window.onhashchange = function(event) {\n  console.log(event)\n}\n// 或者\nwindow.addEventListener('hashchange', function(event) {\n  console.log(event)\n})`, `36689963775491720000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onhashchange</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">event</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">event</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">// 或者</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk12\">window</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addEventListener</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;hashchange&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\">(</span><span class=\"mtk12\">event</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk12\">event</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">})</span></span></code></pre>\n<p>当 hash 值改变时, 输出一个 HashChangeEvent</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"8991083712871650000\"\n              data-toaster-class=\"gatsby-code-button-toaster copyToaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text copyToasterText\"\n              data-toaster-text=\"copy successfully!\"\n              data-toaster-duration=\"5000\"\n              onClick=\"copyToClipboard(`{isTrusted: true, oldURL: &quot;http://localhost:3000/&quot;, newURL:   &quot;http://localhost:3000/#teg&quot;, type: &quot;hashchange&quot;.....}`, `8991083712871650000`)\"\n            >\n              <div\n                class=\"gatsby-code-button copyButton\"\n                data-tooltip=\"\"\n              >\n                copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"javascript\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">{isTrusted: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">, oldURL: </span><span class=\"mtk8\">&quot;http://localhost:3000/&quot;</span><span class=\"mtk1\">, newURL:   </span><span class=\"mtk8\">&quot;http://localhost:3000/#teg&quot;</span><span class=\"mtk1\">, type: </span><span class=\"mtk8\">&quot;hashchange&quot;</span><span class=\"mtk1\">.....}</span></span></code></pre>\n<p>可通过监听事件, 加入回调展示或隐藏不同 UI 显示的功能等</p>\n<hr>\n<p><strong>本文参考自</strong></p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/open</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/location\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/location</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/History_API\">https://developer.mozilla.org/zh-CN/docs/Web/API/History_API</a></li>\n<li><a href=\"https://juejin.im/post/5c2708cd6fb9a049f06a5744\">https://juejin.im/post/5c2708cd6fb9a049f06a5744</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtkb { font-weight: bold; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk17 { color: #808080; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n</style>","frontmatter":{"title":"页面跳转相关","date":"2020-01-13","type":"javascript"},"excerpt":"1. window.open(strUrl, strWindowName, strWindowFeatures) 2. 单页应用 3. 监听 url 中的 hash 变化 本文记录一些页面跳转以及监听 URL 的知识1. window.open(strUrl…","fields":{"readingTime":{"text":"5 min read"}}},"allDirectory":{"totalCount":15,"edges":[{"node":{"base":"css"}},{"node":{"base":"frontend"}},{"node":{"base":"interview-css"}},{"node":{"base":"interview-javascript"}},{"node":{"base":"interview-浏览器"}},{"node":{"base":"interview-计算机基础"}},{"node":{"base":"javascript"}},{"node":{"base":"javascript1"}},{"node":{"base":"nodejs"}},{"node":{"base":"react"}},{"node":{"base":"redux-tool-kit"}},{"node":{"base":"typescript"}},{"node":{"base":"vue"}},{"node":{"base":"小程序"}},{"node":{"base":"科普"}}]}},"pageContext":{"slug":"/javascript/js_1/"}},"staticQueryHashes":["1487620982","3141419394","3649515864"]}